{
  "swagger": "2.0",
  "info": {
    "title": "odpf/optimus/core/v1beta1/runtime.proto",
    "version": "0.1"
  },
  "tags": [
    {
      "name": "RuntimeService"
    }
  ],
  "host": "127.0.0.1:9100",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1beta1/project": {
      "get": {
        "summary": "ListProjects returns list of registered projects and configurations",
        "operationId": "RuntimeService_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RuntimeService"
        ]
      },
      "post": {
        "summary": "RegisterProject creates a new optimus project",
        "operationId": "RuntimeService_RegisterProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1RegisterProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1RegisterProjectRequest"
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/job/check": {
      "post": {
        "summary": "CheckJobSpecification checks if a job specification is valid",
        "operationId": "RuntimeService_CheckJobSpecification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CheckJobSpecificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/job/{jobName}/instance": {
      "post": {
        "summary": "RegisterInstance is an internal admin command used during task/hook execution\nto pull task/hook compiled configuration and assets.",
        "operationId": "RuntimeService_RegisterInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1RegisterInstanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "scheduledAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "instanceName": {
                  "type": "string"
                },
                "instanceType": {
                  "$ref": "#/definitions/v1beta1InstanceSpecType"
                },
                "jobrunId": {
                  "type": "string",
                  "title": "either set job_name if this is a scheduled execution\nor set jonrun_id if this is a manual triggered execution\nand not really registered as a valid job"
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/job/{jobName}/status": {
      "get": {
        "summary": "JobStatus returns the current and past run status of jobs",
        "operationId": "RuntimeService_JobStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1JobStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/namespace": {
      "get": {
        "summary": "ListProjectNamespaces returns list of namespaces of a project",
        "operationId": "RuntimeService_ListProjectNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListProjectNamespacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      },
      "post": {
        "summary": "RegisterProjectNamespace creates a new namespace for a project",
        "operationId": "RuntimeService_RegisterProjectNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1RegisterProjectNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "$ref": "#/definitions/v1beta1NamespaceSpecification"
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/namespace/{namespace}/datastore/{datastoreName}/backup": {
      "get": {
        "operationId": "RuntimeService_ListBackups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListBackupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      },
      "post": {
        "operationId": "RuntimeService_Backup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1BackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resourceName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "ignoreDownstream": {
                  "type": "boolean"
                },
                "config": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "allowedDownstreamNamespaces": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "represents which downstream to be backed up. \npossible values are the namespace names, *, or empty. \n'*' means all namespaces are allowed, empty list means all downstream will be ignored."
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/namespace/{namespace}/datastore/{datastoreName}/backupDryrun": {
      "post": {
        "operationId": "RuntimeService_BackupDryRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1BackupDryRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resourceName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "ignoreDownstream": {
                  "type": "boolean"
                },
                "allowedDownstreamNamespaces": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "represents which downstream to be backed up. \npossible values are the namespace names, *, or empty. \n'*' means all namespaces are allowed, empty list means all downstream will be ignored."
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/namespace/{namespace}/datastore/{datastoreName}/resource": {
      "get": {
        "summary": "ListResourceSpecification lists all resource specifications of a datastore in project",
        "operationId": "RuntimeService_ListResourceSpecification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListResourceSpecificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      },
      "post": {
        "summary": "Database CRUD\nCreateResource registers a new resource of a namespace which belongs to a project",
        "operationId": "RuntimeService_CreateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resource": {
                  "$ref": "#/definitions/v1beta1ResourceSpecification"
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      },
      "put": {
        "summary": "UpdateResource updates a resource specification of a datastore in project",
        "operationId": "RuntimeService_UpdateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resource": {
                  "$ref": "#/definitions/v1beta1ResourceSpecification"
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/namespace/{namespace}/datastore/{datastoreName}/resource/{resourceName}": {
      "get": {
        "summary": "ReadResource reads a provided resource spec of a namespace",
        "operationId": "RuntimeService_ReadResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ReadResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/namespace/{namespace}/job": {
      "get": {
        "summary": "ListJobSpecification returns list of jobs created in a project",
        "operationId": "RuntimeService_ListJobSpecification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListJobSpecificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      },
      "post": {
        "summary": "CreateJobSpecification registers a new job for a namespace which belongs to a project",
        "operationId": "RuntimeService_CreateJobSpecification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateJobSpecificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "spec": {
                  "$ref": "#/definitions/v1beta1JobSpecification"
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/namespace/{namespace}/job/{jobName}": {
      "get": {
        "summary": "GetJobSpecification reads a provided job spec of a namespace",
        "operationId": "RuntimeService_GetJobSpecification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetJobSpecificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      },
      "delete": {
        "summary": "DeleteJobSpecification deletes a job spec of a namespace",
        "operationId": "RuntimeService_DeleteJobSpecification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteJobSpecificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/namespace/{namespace}/job/{jobName}/event": {
      "post": {
        "summary": "RegisterJobEvent notifies optimus service about an event related to job",
        "operationId": "RuntimeService_RegisterJobEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1RegisterJobEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "event": {
                  "$ref": "#/definitions/v1beta1JobEvent"
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/namespace/{namespace}/job/{jobName}/task": {
      "get": {
        "summary": "GetJobTask provides task details specific to plugin used in a job",
        "operationId": "RuntimeService_GetJobTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetJobTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/namespace/{namespace}/run": {
      "post": {
        "summary": "RunJob creates a job run and executes all included tasks/hooks instantly\nthis doesn't necessarily deploy the job in db first",
        "operationId": "RuntimeService_RunJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1RunJobResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "specifications": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1beta1JobSpecification"
                  },
                  "title": "job specification order of execution is undefined\nattributes realted to schedule behaviour are ignored like interval,\nstart_date, end_date, catchup, etc"
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/replay": {
      "get": {
        "operationId": "RuntimeService_ListReplays",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListReplaysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      },
      "post": {
        "operationId": "RuntimeService_Replay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ReplayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "jobName": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "startDate": {
                  "type": "string"
                },
                "endDate": {
                  "type": "string"
                },
                "force": {
                  "type": "boolean"
                },
                "allowedDownstreamNamespaces": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "represents which downstream to be replayed. \npossible values are the namespace names, *, or empty. \n'*' means all namespaces are allowed, empty list means all downstream will be ignored."
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/replay/dryrun": {
      "post": {
        "operationId": "RuntimeService_ReplayDryRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ReplayDryRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "jobName": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                },
                "startDate": {
                  "type": "string"
                },
                "endDate": {
                  "type": "string"
                },
                "allowedDownstreamNamespaces": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "represents which downstream to be replayed. \npossible values are the namespace names, *, or empty. \n'*' means all namespaces are allowed, empty list means all downstream will be ignored."
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/replay/{id}": {
      "get": {
        "operationId": "RuntimeService_GetReplayStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetReplayStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/project/{projectName}/secret/{secretName}": {
      "post": {
        "summary": "RegisterSecret creates a new secret of a project",
        "operationId": "RuntimeService_RegisterSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1RegisterSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "secretName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/version": {
      "post": {
        "summary": "server ping with version",
        "operationId": "RuntimeService_Version",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1VersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1VersionRequest"
            }
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    },
    "/v1beta1/window": {
      "get": {
        "summary": "GetWindow provides the start and end dates provided a scheduled date\nof the execution window",
        "operationId": "RuntimeService_GetWindow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetWindowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "scheduledAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "truncateTo",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RuntimeService"
        ]
      }
    }
  },
  "definitions": {
    "BehaviorNotifiers": {
      "type": "object",
      "properties": {
        "on": {
          "$ref": "#/definitions/v1beta1JobEventType"
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "Notifiers are used to set custom alerting in case of job failure/sla_miss"
    },
    "BehaviorRetry": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "delay": {
          "type": "string"
        },
        "exponentialBackoff": {
          "type": "boolean"
        }
      },
      "title": "retry behaviour if job failed to execute for the first time"
    },
    "JobSpecificationBehavior": {
      "type": "object",
      "properties": {
        "retry": {
          "$ref": "#/definitions/BehaviorRetry"
        },
        "notify": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BehaviorNotifiers"
          }
        }
      }
    },
    "JobTaskDependency": {
      "type": "object",
      "properties": {
        "dependency": {
          "type": "string"
        }
      }
    },
    "JobTaskDestination": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ProjectSpecificationProjectSecret": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1BackupDryRunResponse": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoredResources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1BackupResponse": {
      "type": "object",
      "properties": {
        "urn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoredResources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1BackupSpec": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1beta1CheckJobSpecificationResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1beta1CheckJobSpecificationsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "ack": {
          "type": "boolean",
          "title": "non ack responses are more of a progress/info response\nand not really success or failure statuses"
        },
        "message": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        }
      }
    },
    "v1beta1CreateJobSpecificationResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1beta1CreateResourceResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1beta1DeleteJobSpecificationResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1beta1DeployJobSpecificationResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "ack": {
          "type": "boolean",
          "title": "non ack responses are more of a progress/info response\nand not really success or failure statuses"
        },
        "message": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        }
      }
    },
    "v1beta1DeployResourceSpecificationResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "ack": {
          "type": "boolean",
          "title": "non ack responses are more of a progress/info response\nand not success or failure statuses"
        },
        "message": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        }
      }
    },
    "v1beta1GetJobSpecificationResponse": {
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "#/definitions/v1beta1JobSpecification"
        }
      }
    },
    "v1beta1GetJobTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/v1beta1JobTask"
        }
      }
    },
    "v1beta1GetReplayStatusResponse": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "response": {
          "$ref": "#/definitions/v1beta1ReplayStatusTreeNode"
        }
      }
    },
    "v1beta1GetWindowResponse": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1beta1InstanceContext": {
      "type": "object",
      "properties": {
        "envs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "files": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1InstanceSpec": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1InstanceSpecData"
          }
        },
        "executedAt": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1beta1InstanceSpecType"
        }
      }
    },
    "v1beta1InstanceSpecData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1beta1InstanceSpecDataType"
        }
      }
    },
    "v1beta1InstanceSpecDataType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_ENV",
        "TYPE_FILE"
      ],
      "default": "TYPE_UNSPECIFIED",
      "title": "type of data, could be an env var or file"
    },
    "v1beta1InstanceSpecType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_TASK",
        "TYPE_HOOK"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "v1beta1JobConfigItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1beta1JobDependency": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "v1beta1JobEvent": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1beta1JobEventType"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "v1beta1JobEventType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "TYPE_SLA_MISS",
        "TYPE_FAILURE",
        "TYPE_SUCCESS"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "v1beta1JobSpecHook": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "config": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1JobConfigItem"
          }
        }
      }
    },
    "v1beta1JobSpecification": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "interval": {
          "type": "string"
        },
        "dependsOnPast": {
          "type": "boolean"
        },
        "catchUp": {
          "type": "boolean"
        },
        "taskName": {
          "type": "string"
        },
        "config": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1JobConfigItem"
          }
        },
        "windowSize": {
          "type": "string"
        },
        "windowOffset": {
          "type": "string"
        },
        "windowTruncateTo": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1JobDependency"
          }
        },
        "assets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1JobSpecHook"
          }
        },
        "description": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "behavior": {
          "$ref": "#/definitions/JobSpecificationBehavior"
        }
      }
    },
    "v1beta1JobStatus": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "scheduledAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1beta1JobStatusResponse": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1JobStatus"
          }
        }
      }
    },
    "v1beta1JobTask": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "destination": {
          "$ref": "#/definitions/JobTaskDestination"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobTaskDependency"
          }
        }
      },
      "title": "JobTask is part of a job that dictates main transformation\neach job has exactly one task"
    },
    "v1beta1ListBackupsResponse": {
      "type": "object",
      "properties": {
        "backups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1BackupSpec"
          }
        }
      }
    },
    "v1beta1ListJobSpecificationResponse": {
      "type": "object",
      "properties": {
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1JobSpecification"
          }
        }
      }
    },
    "v1beta1ListProjectNamespacesResponse": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1NamespaceSpecification"
          }
        }
      }
    },
    "v1beta1ListProjectsResponse": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ProjectSpecification"
          }
        }
      }
    },
    "v1beta1ListReplaysResponse": {
      "type": "object",
      "properties": {
        "replayList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ReplaySpec"
          }
        }
      }
    },
    "v1beta1ListResourceSpecificationResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ResourceSpecification"
          }
        }
      }
    },
    "v1beta1NamespaceSpecification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1ProjectSpecification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectSpecificationProjectSecret"
          }
        }
      }
    },
    "v1beta1ReadResourceResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "resource": {
          "$ref": "#/definitions/v1beta1ResourceSpecification"
        }
      }
    },
    "v1beta1RegisterInstanceResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v1beta1ProjectSpecification"
        },
        "namespace": {
          "$ref": "#/definitions/v1beta1NamespaceSpecification"
        },
        "job": {
          "$ref": "#/definitions/v1beta1JobSpecification"
        },
        "instance": {
          "$ref": "#/definitions/v1beta1InstanceSpec"
        },
        "context": {
          "$ref": "#/definitions/v1beta1InstanceContext"
        }
      }
    },
    "v1beta1RegisterJobEventResponse": {
      "type": "object"
    },
    "v1beta1RegisterProjectNamespaceResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1beta1RegisterProjectRequest": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v1beta1ProjectSpecification"
        },
        "namespace": {
          "$ref": "#/definitions/v1beta1NamespaceSpecification"
        }
      }
    },
    "v1beta1RegisterProjectResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1beta1RegisterSecretResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1beta1ReplayDryRunResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "response": {
          "$ref": "#/definitions/v1beta1ReplayExecutionTreeNode"
        },
        "executionTree": {
          "$ref": "#/definitions/v1beta1ReplayExecutionTreeNode"
        },
        "ignoredJobs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1ReplayExecutionTreeNode": {
      "type": "object",
      "properties": {
        "jobName": {
          "type": "string"
        },
        "dependents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ReplayExecutionTreeNode"
          }
        },
        "runs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "v1beta1ReplayResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ignoredJobs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1beta1ReplaySpec": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1beta1ReplayStatusRun": {
      "type": "object",
      "properties": {
        "run": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "v1beta1ReplayStatusTreeNode": {
      "type": "object",
      "properties": {
        "jobName": {
          "type": "string"
        },
        "dependents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ReplayStatusTreeNode"
          }
        },
        "runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ReplayStatusRun"
          }
        },
        "state": {
          "type": "string"
        }
      }
    },
    "v1beta1ResourceSpecification": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "spec": {
          "type": "object"
        },
        "assets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "ResourceSpecification are datastore specification representation of a resource"
    },
    "v1beta1RunJobResponse": {
      "type": "object"
    },
    "v1beta1UpdateResourceResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1beta1VersionRequest": {
      "type": "object",
      "properties": {
        "client": {
          "type": "string"
        }
      }
    },
    "v1beta1VersionResponse": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Optimus server"
  }
}
